package pkgfinal;

import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;


public class EditFlight extends javax.swing.JPanel {


    public EditFlight() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        PlaneID_Field = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        PilotID_Field = new javax.swing.JTextField();
        Date_Field = new javax.swing.JTextField();
        Source_Field = new javax.swing.JTextField();
        Destination_Field = new javax.swing.JTextField();
        AvailableSeats_Field = new javax.swing.JTextField();
        Time_Field = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        flightID_Field = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton4 = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setText("Plane ID:");

        PlaneID_Field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PlaneID_FieldActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("   Pilot ID:");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("Date:");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setText(" Source:");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setText("Destination:");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setText("Available Seats:");

        jButton3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton3.setText("Delete");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setText("Time:");

        PilotID_Field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PilotID_FieldActionPerformed(evt);
            }
        });

        Date_Field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Date_FieldActionPerformed(evt);
            }
        });

        Source_Field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Source_FieldActionPerformed(evt);
            }
        });

        Destination_Field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Destination_FieldActionPerformed(evt);
            }
        });

        AvailableSeats_Field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AvailableSeats_FieldActionPerformed(evt);
            }
        });

        Time_Field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Time_FieldActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel8.setText("Edit Flight");

        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton1.setText("Edit");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        flightID_Field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                flightID_FieldActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel9.setText("ID of the flight you want to edit:");

        jButton2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton2.setText("Cancel");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel10.setText("List of Flights");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                jTable1AncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jScrollPane2.setViewportView(jTable1);

        jButton4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton4.setText("Refresh Table");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(120, 120, 120)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel1)))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel9)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(Time_Field, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(AvailableSeats_Field, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Destination_Field, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Source_Field, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Date_Field, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(PilotID_Field, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(PlaneID_Field, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(flightID_Field, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(37, 37, 37))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 333, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(308, 308, 308))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addGap(153, 153, 153))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel8)
                .addGap(55, 55, 55)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(flightID_Field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PlaneID_Field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PilotID_Field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Date_Field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Source_Field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Destination_Field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AvailableSeats_Field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Time_Field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(jButton1))
                .addGap(18, 18, 18)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47))
            .addGroup(layout.createSequentialGroup()
                .addGap(77, 77, 77)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 476, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(16, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void PlaneID_FieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PlaneID_FieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PlaneID_FieldActionPerformed

    private void PilotID_FieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PilotID_FieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PilotID_FieldActionPerformed

    private void Date_FieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Date_FieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Date_FieldActionPerformed

    private void Source_FieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Source_FieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Source_FieldActionPerformed

    private void Destination_FieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Destination_FieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Destination_FieldActionPerformed

    private void AvailableSeats_FieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AvailableSeats_FieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AvailableSeats_FieldActionPerformed

    private void Time_FieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Time_FieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Time_FieldActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Administrator a = new Administrator();
        String ID = flightID_Field.getText().trim() ;
        String plane_ID = PlaneID_Field.getText().trim() ;            
        String pilot_ID = PilotID_Field.getText().trim() ;
        String date = Date_Field.getText().trim() ;
        String source = Source_Field.getText().trim() ;
        String destination = Destination_Field.getText().trim() ;
        String availableSeats = AvailableSeats_Field.getText().trim() ;
        String time = Time_Field.getText().trim() ;
        
        if( flightID_Field.getText().isEmpty() || (PlaneID_Field.getText().isEmpty() && PilotID_Field.getText().isEmpty() &&
            Date_Field.getText().isEmpty() && Source_Field.getText().isEmpty() && Destination_Field.getText().isEmpty() && 
            AvailableSeats_Field.getText().isEmpty() && Time_Field.getText().isEmpty())){
            JOptionPane.showMessageDialog(null, "please enter the empty Fields.\nNote: at least the flight id and one from other fields");
        }
        else if(!flightID_Field.getText().isEmpty() && !a.flight_isExist(ID) ){
            JOptionPane.showMessageDialog(null, "the flight ID is'n exist in database");
        }
        else if(!PlaneID_Field.getText().isEmpty() && !a.plane_isExist(plane_ID)){
            JOptionPane.showMessageDialog(null, "the plane ID is'n exist in database");
        }
        else if(!PilotID_Field.getText().isEmpty() && !a.pilot_isExist(pilot_ID)){
            JOptionPane.showMessageDialog(null, "the pilot ID is'n exist in database");
        }
        else{
            if(!PlaneID_Field.getText().isEmpty()){
                a.editPlaneID_in_flight(ID, Integer.parseInt(plane_ID));
                PlaneID_Field.setText("");
            }
            if(!PilotID_Field.getText().isEmpty()){
                a.editPilotID_in_flight(ID, Integer.parseInt(pilot_ID));
                PilotID_Field.setText("");
            }
            if(!Date_Field.getText().isEmpty()){
                a.editDate_in_flight(ID, date);
                Date_Field.setText("");
            }
            if(!Source_Field.getText().isEmpty()){
                a.editSource_in_flight(ID, source);
                Source_Field.setText("");
            }
            if(!Destination_Field.getText().isEmpty()){
                a.editDestination_in_flight(ID, destination);
                Destination_Field.setText("");
            }
            if(!AvailableSeats_Field.getText().isEmpty()){
                a.editAvailableSeats_in_flight(ID, Integer.parseInt(availableSeats));
                AvailableSeats_Field.setText("");
            }
            if(!Time_Field.getText().isEmpty()){
                a.editTime_in_flight(ID, time);
                Time_Field.setText("");
            }
            flightID_Field.setText("");
            JOptionPane.showMessageDialog(null, "the flight is Edited.");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void flightID_FieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_flightID_FieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_flightID_FieldActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        Admin obj = new Admin();
        setLayout(new java.awt.BorderLayout());
        removeAll();
        add(obj);
        revalidate();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        if(flightID_Field.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "please enter the ID of the flight you want to delete.");
        }        
        else{
            String ID = flightID_Field.getText().trim() ;
            Administrator a = new Administrator();
            a.deleteFlight(ID);
            JOptionPane.showMessageDialog(null, "the flight which ID is: "+ ID +" deleted.");
            flightID_Field.setText("");
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jTable1AncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_jTable1AncestorAdded
        Administrator a = new Administrator();
        ResultSet r1 = a.printAllFlights();
        DefaultTableModel tableModel = (DefaultTableModel) jTable1.getModel();
        tableModel.setColumnIdentifiers(new String[] { "ID","Plane ID","Pilot ID", "Date", "Source", "Destination", "Available Seats","Time" });
        tableModel.setRowCount(0); // Clear existing data

        try {
            while (r1.next()) {
                Object[] rowData = new Object[8];
                rowData[0] = r1.getInt("ID");
                rowData[1] = r1.getInt("Plane_id");
                rowData[2] = r1.getInt("Pilot_id");
                rowData[3] = r1.getString("Date");
                rowData[4] = r1.getString("Source");
                rowData[5] = r1.getString("Destination");
                rowData[6] = r1.getString("Available_seats");
                rowData[7] = r1.getString("Time");

                tableModel.addRow(rowData);
            }
        }catch(SQLException e){
            e.printStackTrace();
        }
        JTable table = new JTable(tableModel);
        JScrollPane scrollPane = new JScrollPane(table);                                       
    }//GEN-LAST:event_jTable1AncestorAdded

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        Administrator a = new Administrator();
        ResultSet r1 = a.printAllFlights();
        DefaultTableModel tableModel = (DefaultTableModel) jTable1.getModel();
        tableModel.setColumnIdentifiers(new String[] { "ID","Plane ID","Pilot ID", "Date", "Source", "Destination", "Available Seats","Time" });
        tableModel.setRowCount(0); // Clear existing data

        try {
            while (r1.next()) {
                Object[] rowData = new Object[8];
                rowData[0] = r1.getInt("ID");
                rowData[1] = r1.getInt("Plane_id");
                rowData[2] = r1.getInt("Pilot_id");
                rowData[3] = r1.getString("Date");
                rowData[4] = r1.getString("Source");
                rowData[5] = r1.getString("Destination");
                rowData[6] = r1.getString("Available_seats");
                rowData[7] = r1.getString("Time");

                tableModel.addRow(rowData);
            }
        }catch(SQLException e){
            e.printStackTrace();
        }
        JTable table = new JTable(tableModel);
        JScrollPane scrollPane = new JScrollPane(table);
                                            
    }//GEN-LAST:event_jButton4ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField AvailableSeats_Field;
    private javax.swing.JTextField Date_Field;
    private javax.swing.JTextField Destination_Field;
    private javax.swing.JTextField PilotID_Field;
    private javax.swing.JTextField PlaneID_Field;
    private javax.swing.JTextField Source_Field;
    private javax.swing.JTextField Time_Field;
    private javax.swing.JTextField flightID_Field;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
